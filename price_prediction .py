# -*- coding: utf-8 -*-
"""price_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W6boDw1SLbJfJ2syRzuAZnIkTJL0g9Ss
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv('/content/train.csv')

data

data.info()

data

data.info()

data.info()

data

data

data.info()

data.dropna(axis=1,inplace=True)

data

data.info()

from sklearn.model_selection import train_test_split

x= data.drop(['SalePrice'],axis=1)
y = data['SalePrice']

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2)

train_data=x_train.join(y_train)

train_data.hist(figsize=(15,8))

train_data = train_data.select_dtypes(exclude=['object'])

train_data.corr()

train_data

plt.figure(figsize=(60,40))
sns.heatmap(train_data.corr(),annot=True)

plt.figure(figsize=(15,10))
sns.scatterplot(x='SalePrice',y='LotArea',data=train_data,hue='SalePrice')

train_data

train_data['houseAge'] = train_data['YrSold']-train_data['YearBuilt']

from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
x_train,y_train = train_data.drop(['SalePrice'],axis=1),train_data['SalePrice']

reg = LinearRegression()

reg.fit(x_train,y_train)

test_data=x_test.join(y_test)
test_data = test_data.select_dtypes(exclude=['object'])
test_data['houseAge'] = test_data['YrSold']-test_data['YearBuilt']

x_test,y_test = test_data.drop(['SalePrice'],axis=1),test_data['SalePrice']

reg.score(x_test,y_test)

test_data1 = pd.read_csv('/content/test.csv')

test_data1.info()

test_data1.dropna(axis=1,inplace=True)

test_data1.info()

test_data1 = test_data1.select_dtypes(exclude=['object'])

test_data1['houseAge'] = test_data1['YrSold']-test_data1['YearBuilt']

X_test,Y_test = test_data.drop(['SalePrice'],axis=1),test_data['SalePrice']

y_pred = reg.predict(X_test)

from sklearn.metrics import mean_squared_error, r2_score
r2 = r2_score(Y_test, y_pred)

r2 # Final score whcih shows the accuracy of the model

